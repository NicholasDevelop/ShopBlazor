@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime

<h3>BlazorJs</h3>

<div class="row">
    <button class="btn btn-secondary m-2" style="width:200px;" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>
<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="ToasterSuccess">Toaster Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="ToasterFailure">Toaster Failure</button>
</div>
<br /><br />
<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert Failure</button>
</div>

<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation as been made!</p>
    }
    else
    {
        <p>Confirmation pending!</p>
    }
</div>


@code {
    private string ConfirmMessage = "Are you sure you want to click?";

    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToasterSuccess()
    {
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }

    private async Task ToasterFailure()
    {
        await _JsRuntime.ToastrError("Operation Failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task completed Successfully!");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed!");
    }
}
